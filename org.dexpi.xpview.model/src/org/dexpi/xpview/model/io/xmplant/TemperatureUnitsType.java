//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.03.11 at 08:37:52 PM CET 
//


package org.dexpi.xpview.model.io.xmplant;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TemperatureUnitsType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TemperatureUnitsType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="degC"/>
 *     &lt;enumeration value="degF"/>
 *     &lt;enumeration value="degK"/>
 *     &lt;enumeration value="DegreeKelvin"/>
 *     &lt;enumeration value="DegreeCelsius"/>
 *     &lt;enumeration value="DegreeRankine"/>
 *     &lt;enumeration value="DegreeFahrenheit"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TemperatureUnitsType")
@XmlEnum
public enum TemperatureUnitsType {

    @XmlEnumValue("degC")
    DEG_C("degC"),
    @XmlEnumValue("degF")
    DEG_F("degF"),
    @XmlEnumValue("degK")
    DEG_K("degK"),
    @XmlEnumValue("DegreeKelvin")
    DEGREE_KELVIN("DegreeKelvin"),
    @XmlEnumValue("DegreeCelsius")
    DEGREE_CELSIUS("DegreeCelsius"),
    @XmlEnumValue("DegreeRankine")
    DEGREE_RANKINE("DegreeRankine"),
    @XmlEnumValue("DegreeFahrenheit")
    DEGREE_FAHRENHEIT("DegreeFahrenheit");
    private final java.lang.String value;

    TemperatureUnitsType(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static TemperatureUnitsType fromValue(java.lang.String v) {
        for (TemperatureUnitsType c: TemperatureUnitsType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
