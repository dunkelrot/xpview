//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.03.11 at 08:37:52 PM CET 
//


package com.basf.xpview.model.io.xmplant;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VolumeUnitsType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VolumeUnitsType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="cc"/>
 *     &lt;enumeration value="CubicMillimetre"/>
 *     &lt;enumeration value="CubicCentimetre"/>
 *     &lt;enumeration value="CubicMetre"/>
 *     &lt;enumeration value="CubicInch"/>
 *     &lt;enumeration value="CubicFeet"/>
 *     &lt;enumeration value="CubicYard"/>
 *     &lt;enumeration value="litres"/>
 *     &lt;enumeration value="gallons"/>
 *     &lt;enumeration value="USGallons"/>
 *     &lt;enumeration value="barrels"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "VolumeUnitsType")
@XmlEnum
public enum VolumeUnitsType {

    @XmlEnumValue("cc")
    CC("cc"),
    @XmlEnumValue("CubicMillimetre")
    CUBIC_MILLIMETRE("CubicMillimetre"),
    @XmlEnumValue("CubicCentimetre")
    CUBIC_CENTIMETRE("CubicCentimetre"),
    @XmlEnumValue("CubicMetre")
    CUBIC_METRE("CubicMetre"),
    @XmlEnumValue("CubicInch")
    CUBIC_INCH("CubicInch"),
    @XmlEnumValue("CubicFeet")
    CUBIC_FEET("CubicFeet"),
    @XmlEnumValue("CubicYard")
    CUBIC_YARD("CubicYard"),
    @XmlEnumValue("litres")
    LITRES("litres"),
    @XmlEnumValue("gallons")
    GALLONS("gallons"),
    @XmlEnumValue("USGallons")
    US_GALLONS("USGallons"),
    @XmlEnumValue("barrels")
    BARRELS("barrels");
    private final java.lang.String value;

    VolumeUnitsType(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static VolumeUnitsType fromValue(java.lang.String v) {
        for (VolumeUnitsType c: VolumeUnitsType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
